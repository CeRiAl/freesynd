Installation Instructions
*************************

Original game data files
========================

  Due to licence restrictions, we don't distribute the original game data files.
You should have a copy of Syndicate or buy it. In order to run FreeSynd, copy
all files from the original Syndicate DATA directory to the FreeSynd Data
directory.
  You can also copy all files (original files and FreeSynd data files) to a unique
and distinct directory and tell Freesynd to read resources into it. See the chapter
"Configuring Freesynd" to specify that directory.

====>Attention : Please, be sure to have files from the first version of Syndicate
as Freesynd does not support files from Syndicate Plus or Syndicate Wars.

Required Libraries
==================

  On Windows, all libraries are released with the game. You don't have to install
anything.
  
  In order to run FreeSynd under Linux, you first need to install:
    - cmake-2.6 (minimum)
    - libSDL-1.2
    - libSDL_mixer
    - libSDL_image
    - libpng

  On a debian based distribution you can do this as simply as:
apt-get install libsdl1.2debian
apt-get install libsdl-mixer1.2

  For other distributions, consult the appropriate documentation.

Installation from released file
===============================

 * Windows Installation
 ----------------------

   Unzip the file in any directory you want. See chapter "Original game data files"
to add original Syndicate resources that are not bundled with Freesynd.

 * Linux Installation
 --------------------

   Unzip/untar file in your prefered directory and enter the newly 
created freesynd directory. Type the following commands:
      make
      make install

  By default, FreeSynd will install its binaries in the 'bindir' and its data
in 'datarootdir/freesynd'. See chapter "Original game data files"
to add original Syndicate resources that are not bundled with Freesynd.

   Consult documentation on configure to know how to customize installation.

Building from source
====================

 * Windows
 ---------
  You can build the project using Visual C++ 2008 or Dev-cpp.
  But before you will need to generate project files with CMAKE get at
http://www.cmake.org/ . Use cmake-gui, then set Source to where source code
from trunk is and Build where projects files should be located. Then Tools->Configure
set target enviroment Visual Studio 9 for Visual C++ 2008 or MinGW for Dev-cpp.
  
List of librairies used to build freesynd:
------------------------------------------
* sdl       : 1.2.14
* sdl_mixer : 1.2.11
* sdl_image : 1.2.10
* libpng    : 1.4.1
* zlib      : 1.2.3

Assumptions:
------------
* The FreeSynd source files are in ..\..
* The external libraries are in ..\..\..\libs

List of required DLL to run freesynd (see dll in the libs directory)
-------------------------------------
	- libogg-0.dll
	- libpng14.dll
	- libvorbis-0.dll
	- libvorbisfile-3.dll
	- SDL.dll
	- SDL_image.dll
	- SDL_mixer.dll
	- zlib1.dll

How to build - Dev-cpp:
------------
1) Select "File | Open Project...".
   Open "projects\dev-cpp\FreeSynd.dev".
   
2) Set the appropriate macros :
* dynamic macros : those macros are settable in the project properties
	_WIN32 / WIN32 : used to specify it's a WinNt platform (mandatory)
    _DEBUG : used in the Debug configuration (for example for logging)
	SYSTEM_SDL : used to specify the implementation of the System interface. 
                 For now, this is the only implementation
	GP2X : used to build for the GP2X platform
	CHEAP_LEAK_DETECTION : set to debug memory leaks
	
* static macros : you need to modify the config.h file to modify those macros
	HAVE_SDL_MIXER : tells whether the sdl_mixer librairy is used or not.
	USE_INTRO_MP3 : tells whether to play the intro music from custom file
	                or original file
	USE_ASSASSINATE_MP3 : tells whether to play the game music from custom file
	                or original file
	USE_OGG_INSTEAD_OF_MP3 : tells whether to play mp3 or ogg files

2) Select "Run | Compile".

How to build - MS Visual C++ 2008:
------------
1) On the main menu, select "File | Open Solution".
   Open "projects\visualc9\freesynd.sln".
   
2) Set the appropriate macros :
* dynamic macros : those macros are settable in the project properties
	_WIN32 / WIN32 : used to specify it's a WinNt platform (mandatory)
        _DEBUG : used in the Debug configuration (for example for logging)
	SYSTEM_SDL : used to specify the implementation of the System interface.
                 For now, this is the only implementation
	GP2X : used to build for the GP2X platform
	CHEAP_LEAK_DETECTION : set to debug memory leaks
	
* static macros : you need to modify the config.h file to modify those macros
	HAVE_SDL_MIXER : tells whether the sdl_mixer librairy is used or not.
	USE_INTRO_MP3 : tells whether to play the intro music from custom file
	                or original file
	USE_ASSASSINATE_MP3 : tells whether to play the game music from custom file
	                or original file
	USE_OGG_INSTEAD_OF_MP3 : tells whether to play mp3 or ogg files

2) Select "Build | Configuration Manager...".
   Choose the configuration you wish to build.

3) Select "Build | Clean Solution".

4) Select "Build | Build Solution".

How to run the game
---------------
1) Copy the required DLL to the Debug/Release directory, if not already done
1a) MS VC++2008 only. In the project properties, set the working directory to
 the directory containing the data directory
2) Select "Run | Execute".
  
 * Linux or Mac OS X
 -------
   Enter the freesynd directory.
   Run the following commands to set the environment up :
      cmake ./

   Then run those commands to build the game:
      make

 * List of MACROs
 ----------------
  This is a list of all Preprocessor macros used when building the application:
  - _DEBUG : Activate debugging informations. Specify this macro at compile time
  - SYSTEM_SDL : Tells that the underlying graphic system is SDL. Specify this
  macro at compile time.
  
Configuring Freesynd
====================

  Freesynd reads the file freesynd.ini to get its running configuration.
You can edit the file with any text editore to customize your installation.

    On Linux, the application looks for the file in the $HOME/.freesynd 
directory but on Windows, it searches in the directory containing the 
freesynd.exe file. 
If the freesynd.ini is not found, then the application generates a new file 
with default parameters values.

Here is a description a each parameter :
 * fullscreen : (true/false) Setting true will run the game in fullscreen
 * play_intro : (true/false) True will play the game introduction.
 * data_dir : data files directory
 * language :  0:english, 1:french, 2:italian, 3:deutch 
 
